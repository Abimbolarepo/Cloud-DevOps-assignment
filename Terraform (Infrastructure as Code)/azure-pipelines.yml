# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'

- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'init'
    backendServiceArm: 'service-principle-for-terraform1'
    backendAzureRmResourceGroupName: 'terraform'
    backendAzureRmStorageAccountName: 'ter1'
    backendAzureRmContainerName: 'abimbola'
    backendAzureRmKey: 'dev.vnet.terraform.tfstate'

- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'plan'
    commandOptions: '-out vnet.tfplan'
    environmentServiceNameAzureRM: 'service-principle-for-terraform1'

- task: TerraformTaskV3@3
  inputs:
    provider: 'azurerm'
    command: 'apply'
    commandOptions: '-auto-approve vnet.tfplan'
    environmentServiceNameAzureRM: 'service-principle-for-terraform1'
